version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - IMAGE_TAG=$(cat ./app_config.json | jq -r '.app_version')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - sed -i -e "s|CONTAINER_NAME|$CONTAINER_NAME|g" ./appspec.yaml
#      - sed -i -e "s|IMAGE_ID|$REPOSITORY_URI:$IMAGE_TAG|g" ./taskdef.json      
#      - printf '{"ImageURI":"$REPOSITORY_URI:$IMAGE_TAG"}' > imageDetail.json
      - sed -i -e "s|TASK_EXEC_ROLE_ARN|$TASK_EXEC_ROLE_ARN|g;s|IMAGE_ID|$REPOSITORY_URI:$IMAGE_TAG|g;s|FAMILY_NAME|$FAMILY_NAME|g;s|CONTAINER_NAME|$CONTAINER_NAME|g;s|SECRET_ARN|$SECRET_ARN|g;s|TASK_NAME|$TASK_NAME|g" ./taskdef.json
#      - sed -i -e "s/IMAGE_ID/$REPOSITORY_URI:$IMAGE_TAG/g" ./taskdef.json
#      - sed -i -e "s/FAMILY_NAME/$FAMILY_NAME/g" ./taskdef.json
#      - sed -i -e "s/CONTAINER_NAME/$CONTAINER_NAME/g" ./taskdef.json

artifacts:
    files: 
      - appspec.yaml
      - taskdef.json
#      - imageDetail.json